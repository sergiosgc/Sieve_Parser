<start> ::= <commands>(cmds)
<<<
$result = new \sergiosgc\Sieve_Parser\Script($cmds->getValue());
var_dump(__LINE__); exit;
>>>

<commands> ::= <commands>(acc) <commented-command>(cmd) | <commented-command>(cmd)
<<<
$result = isset($acc) ? $acc->getValue() : [];
$result[] = $cmd->getValue();
>>>


<commented-command> ::= <comment>(comment) <command>(command) | <command>(command)
<<<
$result = $command->getValue();
if (isset($comment)) $result->setComment($comment->getValue());
>>>

<command> ::= <identifier-stop> <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('stop');
>>>

<command> ::= <identifier-notify> <string>(destination) <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('notify', [ $destination->getValue() ]);
>>>

<command> ::= <identifier-fileinto> <string>(mailbox) <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('fileinto', [ $mailbox->getValue() ]);
>>>

<command> ::= <identifier-redirect> <string>(address) <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('redirect', [ $address->getValue() ]);
>>>


<command> ::= <identifier-keep> <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('keep');
>>>

<command> ::= <identifier-discard> <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('discard');
>>>

<command> ::= <identifier-require> <string-list>(capabilities) <semicolon>
<<<
$result = \sergiosgc\Sieve_Parser\Script_Command::create('require', [ $capabilities->getValue() ]);
>>>

<command> ::= <identifier-if> <test>(test) <bracket-open> <block>(block) | <identifier-if> <test>(test) <bracket-open> <block>(block) <command-elsif>(else) | <identifier-if> <test>(test) <bracket-open> <block>(block) <command-else>(else)
<<<
$args = [ $test->getValue(), $block->getValue() ];
if (isset($else)) $args[] = $else->getValue();
$result = \sergiosgc\Sieve_Parser\Script_Command::create('if', $args);
>>>

<command-elsif> ::= <identifier-elsif> <test>(test) <bracket-open> <block>(block) | <identifier-elsif> <test>(test) <bracket-open> <block>(block) <command-elsif>(else) | <identifier-elsif> <test>(test) <bracket-open> <block>(block) <command-else>(else)
<<<
$args = [ $test->getValue(), $block->getValue() ];
if (isset($else)) $args[] = $else->getValue();
$result = \sergiosgc\Sieve_Parser\Script_Command::create('elsif', $args);
>>>

<command-else> ::= <identifier-else> <bracket-open> <block>(block)
<<<
$result =  \sergiosgc\Sieve_Parser\Script_Command::create('else', [ $block->getValue() ]);
>>>

<command> ::=<identifier>(id) <arguments>(args) <semicolon> | <identifier>(id) <arguments>(args) <bracket-open> <block>(block) | <identifier>(id) <semicolon> | <identifier>(id) <bracket-open> <block>(block)
<<<
$args = isset($args) ? $args->getValue() : [];
if (isset($block)) $args[] = $block->getValue();
$result =  \sergiosgc\Sieve_Parser\Script_Command::create($id->getValue(), $args);
>>>
<block> ::= <command>(command) <block>(acc) | <bracket-close>
<<<
$result = isset($acc) ? $acc->getValue() : Script_Argument_Block::create([]);
if (isset($command)) array_unshift($result->commands, $command->getValue());
>>>

<arguments> ::= <arguments-plus>(args) | <arguments-plus>(args) <test>(test) | <arguments-plus>(args) <test-list>(tests) | <test>(test) | <test-list>(tests)
<<<
$result = isset($args) ? $args->getValue() : [];
if (isset($test)) {
    $result[] = $test->getValue();
} elseif (isset($tests)) {
    $result = array_merge(array_values($result), array_values($tests->getValue()));
}
>>>

<arguments-plus> ::= <arguments-plus>(acc) <argument>(arg) | <argument>(arg)
<<<
if (isset($acc)) {
    $result = $acc->getValue();
    $result[] = $arg->getValue();
} else {
    $result = [ $arg->getValue() ];
}
>>>
<test> ::= <identifier-not> <test>(test)
<<<
$result = \sergiosgc\Sieve_Parser\Script_Argument_Test::create(
    'not',
    [ $test->getValue() ]);
>>>

<test> ::= <identifier>(id) <arguments>(args) | <identifier>(id)
<<<
$result = \sergiosgc\Sieve_Parser\Script_Argument_Test::create(
    $id->getValue(),
    isset($args) ? $args->getValue() : [] );
>>>

<test-list> ::= <parenthesis-open> <test-plus-csv>(tests) <parenthesis-close>
<<<
$result = $tests->getValue();
>>>

<test-plus-csv> ::= <test>(test) | <test-plus-csv>(acc) <comma> <test>(test)
<<<
if (isset($acc)) {
    $result = $acc->getValue();
    $result[] = $test->getValue();
} else {
    $result = [ $test->getValue() ];
}
>>>

<argument> ::= <string-list>(arg) | <number>(arg) | <tag>(tag) | <string>(arg)
<<<
$result = isset($tag) ? 
    \sergiosgc\Sieve_Parser\Script_Argument_Tagged::create( $tag->getValue() ) :
    $arg->getValue();
>>>

<string-list> ::= <square-parenthesis-open> <string-plus-csv>(strArr) <square-parenthesis-close> 
<<<
if (isset($str)) {
    $result = \sergiosgc\Sieve_Parser\Script_Argument_Literal::create( [ $str->getValue() ] );
} else {
    $result = $strArr->getValue();
}
>>>

<string-plus-csv> ::= <string>(str) | <string-plus-csv>(acc) <comma> <string>(str)
<<<
if (isset($acc)) {
    $result = $acc->getValue();
    $result->value[] = $str->getValue();
} else {
    $result = \sergiosgc\Sieve_Parser\Script_Argument_Literal::create( [ $str->getValue() ] );
}
>>>

<string> ::= <quoted-string>(quoted) | <multi-line>(multiline)
<<<
$result = \sergiosgc\Sieve_Parser\Script_Argument_Literal::create(
        isset($quoted) ?
            strtr($quoted->getValue(), [ '\\r' => "\r", '\\n' => "\n", '\\\\' => '\\' ]) : # Unquote string
            substr($multiline->getValue(), 0, -3) # Remove .CRLF marker
        );
>>>
<comment> ::= <comment>(comment) <single-comment>(singleComment) | <single-comment>(singleComment)
<<<
if (isset($comment)) {
    $comment->getValue()->text .= $singleComment->getValue();
    $result = $comment->getValue();
} else {
    $result = \sergiosgc\Sieve_Parser\Script_Comment::create($singleComment->getValue());
}
>>>

<single-comment> ::= <hash-comment>(comment) | <bracket-comment>(comment)
<<<
$result = $comment->getValue();
>>>
